@{
    ViewData["Title"] = "Home Page";
}
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" />
    <link rel="stylesheet" href="~/css/Chart.css" />
    <link rel="stylesheet" href="~/css/Chart.min.css" />
    <!--Can we move these?-->
    <script src="~/Scripts/jquery-1.10.2.js"></script>
    <script src="~/Scripts/jquery.unobtrusive-ajax.js"></script>
    <script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
</head>
<body onload="setDefaultValues()">

    <div class="container">
        <div class="container float-left">
            <table class="table">
                <thead>
                    <tr>
                        <th scope="col">Type</th>
                        <th scope="col">Total</th>
                    </tr>
                </thead>

                <tbody>

                    @{
                        int y = 0;
                        // 8 is amount of dif types of doughnuts in inventory.
                        for (int x = 0; x < 8; x++)
                        {
                            InventoryOnHandModelByType type = new InventoryOnHandModelByType();

                            if (x < y)
                            {
                                foreach (InventoryOnHandModelByType inv in ViewBag.InvTotalsByType)
                                {
                                    type = inv;
                                    y++;
                                }


                            }
                            <tr>
                                <th id="indexOfType_@x" scope="row">@x</th>
                                <td id="nameOfType_@x">@type.NameOf</td>
                                <td id="batchTotalType_@x">@type.Total</td>
                            </tr>
                        }
                    }


                </tbody>
            </table>

        </div>
        <button id="getBatchesBtn" class="btn btn-light">@Html.ActionLink("get", "GetBatches")</button>
        <button id="getBatchesBtn" class="btn btn-light">update</button>
        <button id="getBatchesBtn" class="btn btn-light">create</button>
        <div class="container">
            <div class="card-header">
                newest batches:
                <button id="runBatchesSim" class="btn float-right">insert | get from sim</button>
            </div>

        </div>

        <table class="table">
            <thead>
                <tr>
                    <th scope="col"></th>
                    <th scope="col">ID</th>
                    <th scope="col">Name</th>
                    <th scope="col">Total</th>
                    <th scope="col">ETC</th>
                </tr>
            </thead>

            <tbody>

                @{
                    int a = 0;
                    for (int x = 0; x < 10; x++)
                    {
                        BatchModel batch = new BatchModel();

                        if (x < a)
                        {
                            foreach (BatchModel inv in ViewBag.NewestBatches)
                            {
                                batch = inv;
                                a++;
                            }


                        }
                        <tr>
                            <th id="indexOf_@x" scope="row">@x</th>
                            <td id="idOf_@x">@batch.ID</td>
                            <td id="nameOf_@x">@batch.NameOf</td>
                            <td id="batchTotal_@x">@batch.Total</td>
                            <td id="completion_@x">@batch.Completion</td>
                        </tr>
                    }
                }


            </tbody>
        </table>

        <div class="card-header">
            expires next:
        </div>
        <div class="list-group">
            @{
                int b = 0;
                // 8 is amount of dif types of doughnuts in inventory.
                for (int x = 0; x < 8; x++)
                {
                    BatchModel batch = new BatchModel();

                    if (x < b)
                    {
                        foreach (BatchModel inv in ViewBag.ExpiresNext)
                        {
                            batch = inv;
                            b++;
                        }


                    }
                    <div id="idOf_Exp_@x" ; class="list-group-item">
                        @batch.ID
                    </div>
                    <div id="nameOf_Exp_@x" ; class="list-group-item">
                        @batch.NameOf
                    </div>
                    <div id="totalOf_Exp_@x" ; class="list-group-item">
                        @batch.Total
                    </div>
                    <div id="expOf_Exp_@x" ; class="list-group-item">
                        this batch expires: @batch.Expiration
                    </div>
                }



                @*int b = 0;
                foreach (BatchModel inv in ViewBag.ExpiresNext)
                {
                    <div id="idOf_Exp_@b" ; class="list-group-item">
                        @inv.ID
                    </div>
                    <div id="nameOf_Exp_@b" ; class="list-group-item">
                        @inv.NameOf
                    </div>
                    <div id="totalOf_Exp_@b" ; class="list-group-item">
                        @inv.Total
                    </div>
                    <div id="expOf_Exp_@b" ; class="list-group-item">
                        this batch expires: @inv.Expiration
                    </div>
                }*@

            }

        </div>



            <script type="text/javascript">
                $(function () {
                    $("#runBatchesSim").click(function () {

                        // Update most recently created.
                        $.ajax({
                            url: '/Home/GetMostRecentBatchesFromS_Proc',
                            type: 'GET',
                            dataType: 'json',
                            success: function (data) {
                                if (data.length > 0) {

                                    var parsedData = JSON.parse(data);

                                    for (let i = 0; i < data.length; i++) {


                                        document.getElementById("indexOf_" + i).innerHTML = i;
                                        // $('indexOf_' + i).val(i);
                                        document.getElementById("idOf_" + i).innerHTML = parsedData[i].ID;
                                        // $('idOf_' + i).val(result[i].ID);
                                        document.getElementById("nameOf_" + i).innerHTML = parsedData[i].NameOf;
                                        // $('nameOf_' + i).val(result[i].NameOf);
                                        document.getElementById("batchTotal_" + i).innerHTML = parsedData[i].Total;
                                        // $('batchTotal_' + i).val(result[i].Total);
                                        document.getElementById("completion_" + i).innerHTML = parsedData[i].Completion;
                                        // $('completion_' + i).val(result[i].Completion);


                                    }


                                }
                                else {
                                    alert("FAILED");
                                }



                            }
                        });

                        // Update expires next.
                        $.ajax({
                            url: '/Home/GetExpiresNext',
                            type: 'GET',
                            dataType: 'json',
                            success: function (data) {
                                if (data.length > 0) {

                                    var parsedData = JSON.parse(data);

                                    for (let i = 0; i < data.length; i++) {


                                        document.getElementById("idOf_Exp_" + i).innerHTML = parsedData[i].BatchId;
                                        // $('indexOf_' + i).val(i);
                                        document.getElementById("nameOf_Exp_" + i).innerHTML = parsedData[i].NameOf;
                                        // $('idOf_' + i).val(result[i].ID);
                                        document.getElementById("totalOf_Exp_" + i).innerHTML = parsedData[i].Total;
                                        // $('nameOf_' + i).val(result[i].NameOf);
                                        document.getElementById("expOf_Exp_" + i).innerHTML = parsedData[i].Expiration;
                                        // $('batchTotal_' + i).val(result[i].Total);


                                    }


                                }
                                else {
                                    alert("FAILED");
                                }



                            }
                        });

                        // Update totals by type.
                        $.ajax({
                            url: '/Home/GetInventoryOnHandAllByType',
                            type: 'GET',
                            dataType: 'json',
                            success: function (data) {
                                if (data.length > 0) {

                                    var parsedData = JSON.parse(data);

                                    for (let i = 0; i < data.length; i++) {


                                        document.getElementById("nameOfType_" + i).innerHTML = parsedData[i].NameOf;
                                        // $('idOf_' + i).val(result[i].ID);
                                        document.getElementById("batchTotalType_" + i).innerHTML = parsedData[i].Total;
                                        // $('nameOf_' + i).val(result[i].NameOf);
                                    }


                                }
                                else {
                                    alert("FAILED");
                                }



                            }
                        });
                    })
                });
            </script>


            <script type="text/javascript">
            // Can we wait for 20s to show changes?
            function setDefaultValues() {
                @{
                    int i = 0;
                    for (i = 0; i < 10; i++)
                    {
                        <text>
                            var a = document.getElementById(idOf_@i);
                            a.setDefaultValue = "unk";
                            var b = document.getElementById(nameOf_@i);
                            b.setDefaultValue = "unk";
                            var c = document.getElementById(batchTotal_@i);
                            c.setDefaultValue = "unk";
                            var d = document.getElementById(completion_@i);
                            a.setDefaultValue = "unk";
                        </text>
                        }

                    }

            }
            </script>
</body>
</html>

